interval <- c(mean(chow)-Q*se, mean(chow)+Q*se)
covered <-
mean(chowPopulation) <= interval[2] & mean(chowPopulation) >= interval[1]
color <- ifelse(covered,1,2)
lines(interval, c(i,i),col=color)
}
babies <- read.table("babies.txt",header=TRUE)
bwt.nonsmoke <- filter(babies, smoke==0) %>% select(bwt) %>% unlist
bwt.smoke <- filter(babies, smoke==1) %>% select(bwt) %>% unlist
library(rafalib)
mean(bwt.nonsmoke)-mean(bwt.smoke)
popsd(bwt.nonsmoke)
popsd(bwt.smoke)
#Exercise 1
set.seed(1)
N <- 25
dat.ns <- sample(bwt.nonsmoke,N)
dat.s <- sample(bwt.smoke,N)
qt(0.995,48)*sqrt(sd(dat.ns)^2/N + sd(dat.s)^2/N)
#Exercise 3
set.seed(1)
M <- 5
dat.ns <- sample(bwt.nonsmoke,M)
dat.n <- sample(bwt.smoke,M)
ttest = t.test(dat.ns,dat.n)
ttest
babies <- read.table("babies.txt",header=TRUE)
bwt.nonsmoke <- filter(babies,smoke==0)%>%select(bwt)%>%unlist
bwt.smoke <- filter(babies,smoke==1)%>%select(bwt)%>%unlist
#look for true population difference in means between sm and non-sm birth weights
library(rafalib)
#Question 2
N=5
set.seed(1)
rejects <- replicate(10000,{
dat.ns <- sample(bwt.nonsmoke , N)
dat.s <- sample(bwt.smoke , N)
t.test(dat.s, dat.ns)$p.value < 0.05
})
mean(rejects)
#Question 3
Ns=c(30,60,90,120)
res <- sapply(Ns, function(N){
set.seed(1)
rejects <- replicate(10000,{
dat.ns <- sample(bwt.nonsmoke , N)
dat.s <- sample(bwt.smoke , N)
t.test(dat.s, dat.ns)$p.value < 0.05
})
mean(rejects)
})
Ns[ which.min( abs( res - .8) ) ]
t.test(dat.s, dat.ns)$p.value < 0.01
#Question 4
Ns=c(30,60,90,120)
res <- sapply(Ns, function(N){
set.seed(1)
rejects <- replicate(10000,{
dat.ns <- sample(bwt.nonsmoke , N)
dat.s <- sample(bwt.smoke , N)
t.test(dat.s, dat.ns)$p.value < 0.01
})
mean(rejects)
})
Ns[ which.min( abs( res - .8) ) ]
#Question 3
library(rafalib)
mypar(3,2)
Ns<-seq(5,30,5)
B <- 1000
mypar(3,2)
LIM <- c(-4.5,4.5)
for(N in Ns){
ts <- replicate(B, {
X <- rnorm(N)
sqrt(N)*mean(X)/sd(X)
})
ps <- seq(1/(B+1),1-1/(B+1),len=B)
qqplot(qt(ps,df=4),ts,main=N,
xlab="Theoretical",ylab="Observed",
xlim=LIM, ylim=LIM)
abline(0,1)
}
mypar(3,2)
Ns<-seq(5,30,5)
B <- 1000
mypar(3,2)
LIM <- c(-4.5,4.5)
for(N in Ns){
ts <- replicate(B, {
X <- rnorm(N)
sqrt(N)*mean(X)/sd(X)
})
ps <- seq(1/(B+1),1-1/(B+1),len=B)
qqplot(qt(ps,df=N-1),ts,main=N,
xlab="Theoretical",ylab="Observed",
xlim=LIM, ylim=LIM)
abline(0,1)
}
set.seed(1)
N <- 15
B <- 10000
tstats <- replicate(B,{
X <- sample(c(-1,1), N, replace=TRUE)
sqrt(N)*mean(X)/sd(X)
})
ps=seq(1/(B+1), 1-1/(B+1), len=B)
qqplot(qt(ps,N-1), tstats, xlim=range(tstats))
abline(0,1)
#Question 6
set.seed(1)
N <- 1000
B <- 10000
tstats <- replicate(B,{
X <- sample(c(-1,1), N, replace=TRUE)
sqrt(N)*mean(X)/sd(X)
})
qqnorm(tstats)
abline(0,1)
#Question 7
set.seed(1)
Ns <- seq(5,45,5)
library(rafalib)
mypar(3,3)
for(N in Ns){
medians <- replicate(10000, median ( rnorm(N) ) )
title <- paste("N=",N,", avg=",round( mean(medians), 2) , ", sd*sqrt(N)=", round( sd(medians)*sqrt(N),2) )
qqnorm(medians, main = title )
qqline(medians)
}
babies <- read.table("babies.txt", header=TRUE)
bwt.nonsmoke <- filter(babies, smoke==0) %>% select(bwt) %>% unlist
bwt.smoke <- filter(babies, smoke==1) %>% select(bwt) %>% unlist
N=12
set.seed(1)
nonsmokers <- sample(bwt.nonsmoke , N)
smokers <- sample(bwt.smoke , N)
obs <- mean(smokers) - mean(nonsmokers)
dat <- c(smokers,nonsmokers)
shuffle <- sample( dat )
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
mean(smokersstar)-mean(nonsmokersstar)
N <- 12
avgdiff <- replicate(1000, {
all <- sample(c(smokersstar,nonsmokersstar))
smokersstar <- all[1:N]
nonsmokersstar <- all[(N+1):(2*N)]
mean(nonsmokersstar) - mean(smokersstar)
})
hist(avgdiff)
abline(v=obs, col="red", lwd=2)
v = (sum(abs(avgdiff) > abs(obs)) + 1) / (length(avgdiff) + 1)
v
set.seed(1)
obs <- median(smokers) - median(nonsmokers)
null <- replicate(1000, {
shuffle <- sample( dat )
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
median(smokersstar)-median(nonsmokersstar)
})
( sum( abs(null) >= abs(obs)) +1 ) / ( length(null)+1 )
## As before we add 1 to avoid p-value of 0 but we also accept
( sum( abs(null) >= abs(obs)) ) / ( length(null) )
N <- 12
avgdiff <- replicate(1000, {
all <- sample(c(smokersstar,nonsmokersstar))
smokersstar <- all[1:N]
nonsmokersstar <- all[(N+1):(2*N)]
median(nonsmokersstar) - median(smokersstar)
})
hist(avgdiff)
abline(v=obs, col="red", lwd=2)
v = (sum(abs(avgdiff) > abs(obs)) + 1) / (length(avgdiff) + 1)
v
N=10
set.seed(1)
nonsmokers <- sample(bwt.nonsmoke , N)
smokers <- sample(bwt.smoke , N)
obs <- median(smokers) - median(nonsmokers)
dat <- c(smokers,nonsmokers)
shuffle <- sample( dat )
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
median(smokersstar)-median(nonsmokersstar)
N <- 10
avgdiff <- replicate(1000, {
all <- sample(c(smokersstar,nonsmokersstar))
smokersstar <- all[1:N]
nonsmokersstar <- all[(N+1):(2*N)]
median(nonsmokersstar) - median(smokersstar)
})
hist(avgdiff)
abline(v=obs, col="red", lwd=2)
v = (sum(abs(avgdiff) > abs(obs)) + 1) / (length(avgdiff) + 1)
v
shuffle = sample(dat)
smokersstar <- all[1:N]
nonsmokersstar <- all[(N+1):(2*N)]
mean(nonsmokersstar) - mean(smokersstar)
#Actual code
N <- 12
avgdiff <- replicate(1000, {
shuffle = sample(dat)
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
mean(nonsmokersstar) - mean(smokersstar)
})
hist(avgdiff)
abline(v=obs, col="red", lwd=2)
v = (sum(abs(avgdiff) > abs(obs)) + 1) / (length(avgdiff) + 1)
v
N=12
set.seed(1)
nonsmokers <- sample(bwt.nonsmoke , N)
smokers <- sample(bwt.smoke , N)
obs <- mean(smokers) - mean(nonsmokers)
dat <- c(smokers,nonsmokers)
shuffle <- sample( dat )
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
mean(smokersstar)-mean(nonsmokersstar)
#Actual code
N <- 12
avgdiff <- replicate(1000, {
shuffle = sample(dat)
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
mean(nonsmokersstar) - mean(smokersstar)
})
hist(avgdiff)
abline(v=obs, col="red", lwd=2)
v = (sum(abs(avgdiff) > abs(obs)) + 1) / (length(avgdiff) + 1)
v
N=12
set.seed(1)
nonsmokers <- sample(bwt.nonsmoke , N)
smokers <- sample(bwt.smoke , N)
obs <- mean(smokers) - mean(nonsmokers)
dat <- c(smokers,nonsmokers)
shuffle <- sample( dat )
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
mean(smokersstar)-mean(nonsmokersstar)
#Actual code
N <- 12
avgdiff <- replicate(1000, {
all <- sample(c(smokersstar,nonsmokersstar))
smokersstar <- all[1:N]
nonsmokersstar <- all[(N+1):(2*N)]
mean(nonsmokersstar) - mean(smokersstar)
})
hist(avgdiff)
abline(v=obs, col="red", lwd=2)
v = (sum(abs(avgdiff) > abs(obs)) + 1) / (length(avgdiff) + 1)
v
d <- read.csv("assoctest.csv")
dat <- read.table(c("assoctest.csv"),header=TRUE,sep=",")
chisq.test(dat$allele,d$case)
fisher.test(dat$allele,dat$case)
fisher.test(dat$allele,dat$case)$pvalue
fisher.test(dat$allele,dat$case)$p.value
library(UsingR)
data("nym.2002",package='UsingR')
library(dplyr)
males <- data.frame(filter(nym.2002,gender=="Male")%>%select(age,time))
library(dplyr)
males <- data.frame(filter(nym.2002,gender=="Male")%>%select(age,time))
data("nym.2002",package='UsingR')
library(dplyr)
males <- data.frame(filter(nym.2002,gender=="Male")%>%select(age,time))
females <-data.frame(filter(nym.2002,gender=="Female")%>%select(age,time))
library(UsingR)
data("nym.2002",package='UsingR')
library(dplyr)
males <- data.frame(filter(nym.2002,gender=="Male")%>%select(age,time))
females <-data.frame(filter(nym.2002,gender=="Female")%>%select(age,time))
x1 = males$age
y1 = males$time
plot(x1,y1,main=paste("correlation=",signif(cor(x1,y1),2)))
cor(x1,y1)
#Question 3
boxplot(split(round(y1),round(x1)))
#Question 3
mypar(1,2)
library(UsingR)
#Question 3
mypar(1,2)
library(UsingR)
data("nym.2002",package='UsingR')
library(dplyr)
males <- data.frame(filter(nym.2002,gender=="Male")%>%select(age,time))
females <-data.frame(filter(nym.2002,gender=="Female")%>%select(age,time))
x1 = males$age
y1 = males$time
plot(x1,y1,main=paste("correlation=",signif(cor(x1,y1),2)))
x2 = females$age
y2 = females$time
plot(x2,y2,main=paste("correlation=",signif(cor(x2,y2),2)))
#Question 3
mypar(1,2)
#Question 3
library(UsingR)
mypar(1,2)
boxplot(split(round(y1),round(x1)))
#Question 3
library(rafalib)
mypar(1,2)
boxplot(split(round(y1),round(x1)))
boxplot(split(round(y2),round(x2)))
#Question 3
wilcox.test(c(1,2,3),c(400,500,600))$p.value
library(UsingR)
data("father.son",package="UsingR")
x <- father.son
View(x)
avgson <- mean(x$sheight)
avgson
father71 <- (father.son,fheight==round"71")%>%select(sheight)
father71 <- filter(father.son,fheight==round"71")%>%select(sheight)
father71 <- filter(father.son,fheight==(round"71"))%>%select(sheight)
father71 <- filter(father.son,fheight==c(round"71"))%>%select(sheight)
father71 <- filter(father.son,fheight==c(round(71))%>%select(sheight)
mean(father71)
father71 <- filter(father.son,fheight==c(round(71))%>%select(sheight)
father71 <- filter(father.son,fheight==c(round(71))%>%select(sheight)
x = father.son$fheight
y = father.son$sheight
mean(y[round(x)==71])
filter(father.son,round(fheight)==71) %>% select(mean(sheight))
library(dplyr)
filter(father.son,round(fheight)==71) %>% select(mean(sheight))
filter(father.son,round(fheight)==71) %>% summarize(mean(sheight))
X = matrix(1:1000,100,10)
head(X)
?matrix()
X[25,3]
#Question 2
x = 1:10
Y = cbind(x1=x, x2=2*x, x3=3*x, x4=4*x, x5=5*x)
sum(Y[7,0])
sum(Y[7,])
q3 <- matrix(1:60,20,3,byrow=TRUE)
View(q3)
all(X[,3]%%3==0)
all(q3[,3]%%3==0)
View(q3)
dim(q3)
dim(X)
dim(Y)
View(X)
head(q3)
#Question 5
Z <- seq(10,1,-2)
Z[length(Z)]
X = matrix(1:15,5,3)
X
t(X)
Y = matrix(1:12,4,3)
Y
a = 2
Y*a
#Transpose
X = matrix(1:15,5,3) #5x3 matrix
X
t(X) #Becomes 3x5 matrix
#Scalar multiplication
Y = matrix(1:12,4,3)
a = 2 #The scalar quantity
Y
Y*a
X<- matrix(c(1,3,2,1,-2,1,1,1,-1),3,3)
#Transpose
X = matrix(1:15,5,3) #5x3 matrix
#Transpose
X = matrix(1:15,5,3) #5x3 matrix
X
t(X) #Becomes 3x5 matrix
#Scalar multiplication
Y = matrix(1:12,4,3)
a = 2 #The scalar quantity
Y
Y*a
Z<- matrix(c(1,3,2,1,-2,1,1,1,-1),3,3)
head(Z)
dim(Z)
#We know answer is (6,2,1) we can try guessing
beta = c(3,2,1)
Z*beta
Z%*%beta
#We know answer is (6,2,1) we can try guessing
beta = c(1,2,3)
Z%*%beta
A = matrix(c(1,3,2,1,-2,1,1,1,-1),3,3)
B = matrix(c(6,2,1),3,1)
A%*%B
solve(A)%*%B
X = matrix(1:10,2,3)
X = matrix(1:5,2,3)
X = matrix(1:6,2,3)
test = t (t(X))
test2 = X%*% matrix(1,ncol(X))
test3 = X*1
test4 = X%*%diag(ncol(X))
Y = matrix(3,2,1,5,4,2,-1,0,-5,2,5,0,1,-1,-5,4)
Y = matrix(c(3,2,1,5,4,2,-1,0,-5,2,5,0,1,-1,-5,4),4,4)
head(Y)
Z = matrix(c(10,5,7,4)4,1)
Z = matrix(c(10,5,7,4),4,1)
Solve(Y)%*%Z
solve(Y)%*%Z
#Question 3
a = matrix(1:12,nrow=4)
head(a)
dim(a)
b = matrix(1:15,nrow=3)
dim(a)
dim(b)
sol = a%*%b
sol[3,2]
#Question 4
weird = a[3]*b[0,2]
#Question 4
weird = a[3]*b[,2]
sum(weird)
#Question 4
weird = a[3]%*%b[,2]
sum(weird)
#Question 4
weird = a[3,]%*%b[,2]
sum(weird)
g = 9.8
n = 25
h0 = 8848
v0 = 0
time = 10
f = h0+v0*time -0.5*time^2
f
f - h0
f = h0+v0*time -0.5*g*time^2
f
#Question 4
A = matrix(c(2,9,5,2,9,5),3,2)
dim(A)
A[1,2]
head(A)
#Question 4
A = matrix(c(2,9,5,2,9,5),2,3)
dim(A)
A[1,2]
dim(A)
#Matrix notation Exercise 6
2.5:6.5
seq(2.5:6.5)
rep(2.5:6.5)
seq(2.5,6.5)
rep(2.5,6.5)
c(2.5,6.5)
#Question 6
c(seq(1,2),seq(3,4))
#Question 6
q6 = c(seq(1,2),seq(3,4))
type(q6)
ismatrix(q6)
#Question 7
#Det = 0 or
Q7 = matrix(c(2,1,6,3),2,2)
head(Q7)
I = matrix(c(1,0,0,1),2,2)
head(I)
solve(Q,I)
solve(Q7,I)
#Question 8
systemeq = matrix(c(1,0,2,1,0,5,1,5,-1),3,3)
head(systemeq)
#Question 8
systemeq = matrix(c(1,0,2,1,2,5,1,5,-1),3,3)
head(systemeq)
soln = matrix(c(6,-4,27),3,1)
solve(systemeq)%*%soln
#Question 2
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/spider_wolff_gorb_2013.csv"
filename <- "spider_wolff_gorb_2013.csv"
library(downloader)
if (!file.exists(filename)) download(url, filename)
spider <- read.csv(filename, skip=1)
spider <- read.csv(filename, skip=1)
#Question 2
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/spider_wolff_gorb_2013.csv"
filename <- "spider_wolff_gorb_2013.csv"
library(downloader)
if (!file.exists(filename)) download(url, filename)
spider <- read.csv(filename, skip=1)
spider <- read.csv(filename, skip=1)
dat <- read.csv("femaleMiceWeights.csv")
load("C:/Users/18687/Desktop/R projects/Statistics and R/skew.RData")
load("C:/Users/18687/Desktop/R projects/Statistics and R/.RData")
x<- read.csv("femaleControlsPopulation.csv")
getwd()
setwd(mydirectory)
setwd(dir)
getwd()
setwd(dir)
setwd(dir(path="C:\Users\18687\Desktop\R projects\Introduction to Linear Models and Matrix Algebra"))
C:/Users/18687/Desktop/R projects/Introduction to Linear Models and Matrix Algebra
setwd(dir("C:/Users/18687/Desktop/R projects/Introduction to Linear Models and Matrix Algebra"))
getwd()
setwd(dir("C:/Users/18687/Desktop/R projects/Introduction to Linear Models and Matrix Algebra"))
load("C:/Users/18687/Desktop/R projects/Statistics and R/.RData")
setwd(dir)
dat <- read.csv("femaleMiceWeights.csv")
