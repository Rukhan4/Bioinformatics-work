def lcs_ext(seq1, seq2, i, j, found):
    """
    [longest common subsequence of 2 strings(how many common sequences are found]

    i and j are used for recursion purposes

    Returns:
        score [int]: [the score generated by adding 1 if the strings have a matched nucleotide on the leftmost side]
        found[int]: [the common subsequence]
    """
    if i == -1 or j == -1:
        return 0, []
    elif seq1[i] == seq2[j]:
        score, found = lcs_ext(seq1, seq2, i-1, j-1, found)
        score += 1
        if found == []:
            found = [seq1[i]]
        else:
            found = [nuc + seq1[i] for nuc in found]
        return score, found
    else:
        score1, found1 = lcs_ext(seq1, seq2, i, j-1, found)
        score2, found2 = lcs_ext(seq1, seq2, i-1, j, found)
        if score1 > score2:
            return score1, found1
        if score2 > score1:
            return score2, found2
        else:
            return score1, found1 + found2


seq1 = 'GCGATC'
seq2 = 'CTGACG'
score, found = lcs_ext(seq1, seq2, len(seq1)-1, len(seq2)-1, [])
print('score:', score)
print('found:', *found)
